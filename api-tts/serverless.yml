service: api-tts
frameworkVersion: '3'

plugins:
  - serverless-deployment-bucket
  - serverless-python-requirements

provider:
  name: aws
  runtime: python3.9
  iam:  # Inline policy definition
    role:
      statements:
      - Effect: Allow
        Action:
          - polly:SynthesizeSpeech
          - dynamodb:*
          - s3:*
        Resource: "*"
          #- arn:aws:dynamodb:*:*:table/your-table-name  # Replace with your table ARN
          #- arn:aws:s3:::my-bucket-for-audios 
  deploymentBucket:
    blockPublicAccess: false

functions:
  health:
    handler: handler.health
    events:
      - httpApi:
          path: /
          method: get
  v1Description:
    handler: handler.v1_description
    events:
      - httpApi:
          path: /v1
          method: get
  v2Description:
    handler: handler.v2_description
    events:
      - httpApi:
          path: /v2
          method: get
  v1ttsDescription:
    handler: handler.v1_tts_description
    events:
      - httpApi:
          path: /v1/tts
          method: post
  v2ttsDescription:
    handler: handler.v2_tts_description
    events:
      - httpApi:
          path: /v2/tts
          method: get

#create bucket
resources:
  Resources:
    MyS3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: my-bucket-for-audios
        PublicAccessBlockConfiguration:
          BlockPublicAcls: false
          BlockPublicPolicy: false
          IgnorePublicAcls: false
          RestrictPublicBuckets: false
          
          
          