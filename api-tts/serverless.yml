service: api-tts
frameworkVersion: '3'

plugins:
  - serverless-deployment-bucket
  - serverless-python-requirements

provider:
  name: aws
  runtime: python3.9
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - polly:SynthesizeSpeech
            - dynamodb:*
            - s3:*
          Resource: "*"
  deploymentBucket:
    blockPublicAccess: false

functions:
  health:
    handler: handler.health
    events:
      - httpApi:
          path: /
          method: get
  v1Description:
    handler: handler.v1_description
    events:
      - httpApi:
          path: /v1
          method: get
  v2Description:
    handler: handler.v2_description
    events:
      - httpApi:
          path: /v2
          method: get
  v1ttsDescription:
    handler: handler.v1_tts_description
    events:
      - httpApi:
          path: /v1/tts
          method: post
  v2ttsDescription:
    handler: handler.v2_tts_description
    events:
      - httpApi:
          path: /v2/tts
          method: post

resources:
  Resources:
    MyS3BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: "my-new-bucket-for-audios"
        PolicyDocument:
          Statement:
            - Effect: Allow
              Principal: "*"
              Action: 
                - s3:GetObject
              Resource: 
                - "arn:aws:s3:::my-new-bucket-for-audios/*"
