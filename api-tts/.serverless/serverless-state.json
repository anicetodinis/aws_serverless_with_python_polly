{
  "service": {
    "service": "api-tts",
    "serviceObject": {
      "name": "api-tts"
    },
    "provider": {
      "name": "aws",
      "runtime": "python3.9",
      "iam": {
        "role": {
          "statements": [
            {
              "Effect": "Allow",
              "Action": [
                "polly:SynthesizeSpeech",
                "dynamodb:*",
                "s3:*"
              ],
              "Resource": "*"
            }
          ]
        }
      },
      "deploymentBucket": null,
      "stage": "dev",
      "region": "us-east-1",
      "versionFunctions": true,
      "deploymentBucketObject": {
        "blockPublicAccess": false
      },
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "HealthLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/api-tts-dev-health"
            }
          },
          "V1DescriptionLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/api-tts-dev-v1Description"
            }
          },
          "V2DescriptionLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/api-tts-dev-v2Description"
            }
          },
          "V1ttsDescriptionLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/api-tts-dev-v1ttsDescription"
            }
          },
          "V2ttsDescriptionLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/api-tts-dev-v2ttsDescription"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "api-tts",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/api-tts-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/api-tts-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iam\"][\"role\"][\"statements\"][0]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "api-tts",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "HealthLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/api-tts/dev/1711527674933-2024-03-27T08:21:14.933Z/api-tts.zip"
              },
              "Handler": "handler.health",
              "Runtime": "python3.9",
              "FunctionName": "api-tts-dev-health",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "HealthLogGroup"
            ]
          },
          "V1DescriptionLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/api-tts/dev/1711527674933-2024-03-27T08:21:14.933Z/api-tts.zip"
              },
              "Handler": "handler.v1_description",
              "Runtime": "python3.9",
              "FunctionName": "api-tts-dev-v1Description",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "V1DescriptionLogGroup"
            ]
          },
          "V2DescriptionLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/api-tts/dev/1711527674933-2024-03-27T08:21:14.933Z/api-tts.zip"
              },
              "Handler": "handler.v2_description",
              "Runtime": "python3.9",
              "FunctionName": "api-tts-dev-v2Description",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "V2DescriptionLogGroup"
            ]
          },
          "V1ttsDescriptionLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/api-tts/dev/1711527674933-2024-03-27T08:21:14.933Z/api-tts.zip"
              },
              "Handler": "handler.v1_tts_description",
              "Runtime": "python3.9",
              "FunctionName": "api-tts-dev-v1ttsDescription",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "V1ttsDescriptionLogGroup"
            ]
          },
          "V2ttsDescriptionLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/api-tts/dev/1711527674933-2024-03-27T08:21:14.933Z/api-tts.zip"
              },
              "Handler": "handler.v2_tts_description",
              "Runtime": "python3.9",
              "FunctionName": "api-tts-dev-v2ttsDescription",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "V2ttsDescriptionLogGroup"
            ]
          },
          "HealthLambdaVersionjirmDkxdFvAlnQpQQu51SzQxCgFt3Ff85JkE1KqN8": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "HealthLambdaFunction"
              },
              "CodeSha256": "ubCjCiGD2mDi7Yrs+sBwsEAd2M1zck07jQZOxxaWwzw="
            }
          },
          "V1DescriptionLambdaVersionv50e7J8SrPMWwBnH8GuHzm0Zng4cXIHHRvi7NLIAYo": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "V1DescriptionLambdaFunction"
              },
              "CodeSha256": "ubCjCiGD2mDi7Yrs+sBwsEAd2M1zck07jQZOxxaWwzw="
            }
          },
          "V2DescriptionLambdaVersionrUT5tt6Aqo3e6QnqgRh62ffI6qOpKOLBsMth40Hi9fc": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "V2DescriptionLambdaFunction"
              },
              "CodeSha256": "ubCjCiGD2mDi7Yrs+sBwsEAd2M1zck07jQZOxxaWwzw="
            }
          },
          "V1ttsDescriptionLambdaVersionWeUJtXcPGtoN7YWsLMPE2TxyO8kzckJe1adJbgZuQrs": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "V1ttsDescriptionLambdaFunction"
              },
              "CodeSha256": "ubCjCiGD2mDi7Yrs+sBwsEAd2M1zck07jQZOxxaWwzw="
            }
          },
          "V2ttsDescriptionLambdaVersionIBICrorIgq4KMuQMGNGl2FMXbTDObHX9beKHPyuMo0": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "V2ttsDescriptionLambdaFunction"
              },
              "CodeSha256": "ubCjCiGD2mDi7Yrs+sBwsEAd2M1zck07jQZOxxaWwzw="
            }
          },
          "HttpApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "dev-api-tts",
              "ProtocolType": "HTTP"
            }
          },
          "HttpApiStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "StageName": "$default",
              "AutoDeploy": true,
              "DefaultRouteSettings": {
                "DetailedMetricsEnabled": false
              }
            }
          },
          "HealthLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "HealthLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationHealth": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"HealthLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGet": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationHealth"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationHealth"
          },
          "V1DescriptionLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "V1DescriptionLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationV1Description": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"V1DescriptionLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetV1": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /v1",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationV1Description"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationV1Description"
          },
          "V2DescriptionLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "V2DescriptionLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationV2Description": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"V2DescriptionLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetV2": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /v2",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationV2Description"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationV2Description"
          },
          "V1ttsDescriptionLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "V1ttsDescriptionLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationV1ttsDescription": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"V1ttsDescriptionLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostV1Tts": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /v1/tts",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationV1ttsDescription"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationV1ttsDescription"
          },
          "V2ttsDescriptionLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "V2ttsDescriptionLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationV2ttsDescription": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"V2ttsDescriptionLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetV2Tts": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /v2/tts",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationV2ttsDescription"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationV2ttsDescription"
          },
          "MyS3Bucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketName": "my-bucket-for-audios"
            }
          },
          "MyS3BucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "MyS3Bucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": "*",
                    "Action": [
                      "s3:GetObject"
                    ],
                    "Resource": [
                      {
                        "Fn::Sub": "arn:aws:s3:::${MyS3Bucket}/*"
                      }
                    ]
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-api-tts-dev-ServerlessDeploymentBucketName"
            }
          },
          "HealthLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "HealthLambdaVersionjirmDkxdFvAlnQpQQu51SzQxCgFt3Ff85JkE1KqN8"
            },
            "Export": {
              "Name": "sls-api-tts-dev-HealthLambdaFunctionQualifiedArn"
            }
          },
          "V1DescriptionLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "V1DescriptionLambdaVersionv50e7J8SrPMWwBnH8GuHzm0Zng4cXIHHRvi7NLIAYo"
            },
            "Export": {
              "Name": "sls-api-tts-dev-V1DescriptionLambdaFunctionQualifiedArn"
            }
          },
          "V2DescriptionLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "V2DescriptionLambdaVersionrUT5tt6Aqo3e6QnqgRh62ffI6qOpKOLBsMth40Hi9fc"
            },
            "Export": {
              "Name": "sls-api-tts-dev-V2DescriptionLambdaFunctionQualifiedArn"
            }
          },
          "V1ttsDescriptionLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "V1ttsDescriptionLambdaVersionWeUJtXcPGtoN7YWsLMPE2TxyO8kzckJe1adJbgZuQrs"
            },
            "Export": {
              "Name": "sls-api-tts-dev-V1ttsDescriptionLambdaFunctionQualifiedArn"
            }
          },
          "V2ttsDescriptionLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "V2ttsDescriptionLambdaVersionIBICrorIgq4KMuQMGNGl2FMXbTDObHX9beKHPyuMo0"
            },
            "Export": {
              "Name": "sls-api-tts-dev-V2ttsDescriptionLambdaFunctionQualifiedArn"
            }
          },
          "HttpApiId": {
            "Description": "Id of the HTTP API",
            "Value": {
              "Ref": "HttpApi"
            },
            "Export": {
              "Name": "sls-api-tts-dev-HttpApiId"
            }
          },
          "HttpApiUrl": {
            "Description": "URL of the HTTP API",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "HttpApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  }
                ]
              ]
            },
            "Export": {
              "Name": "sls-api-tts-dev-HttpApiUrl"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "plugins": [
      "serverless-deployment-bucket",
      "serverless-python-requirements"
    ],
    "pluginsData": {},
    "functions": {
      "health": {
        "handler": "handler.health",
        "events": [
          {
            "httpApi": {
              "path": "/",
              "method": "get"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/"
          }
        ],
        "name": "api-tts-dev-health",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "HealthLambdaVersionjirmDkxdFvAlnQpQQu51SzQxCgFt3Ff85JkE1KqN8"
      },
      "v1Description": {
        "handler": "handler.v1_description",
        "events": [
          {
            "httpApi": {
              "path": "/v1",
              "method": "get"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/v1"
          }
        ],
        "name": "api-tts-dev-v1Description",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "V1DescriptionLambdaVersionv50e7J8SrPMWwBnH8GuHzm0Zng4cXIHHRvi7NLIAYo"
      },
      "v2Description": {
        "handler": "handler.v2_description",
        "events": [
          {
            "httpApi": {
              "path": "/v2",
              "method": "get"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/v2"
          }
        ],
        "name": "api-tts-dev-v2Description",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "V2DescriptionLambdaVersionrUT5tt6Aqo3e6QnqgRh62ffI6qOpKOLBsMth40Hi9fc"
      },
      "v1ttsDescription": {
        "handler": "handler.v1_tts_description",
        "events": [
          {
            "httpApi": {
              "path": "/v1/tts",
              "method": "post"
            },
            "resolvedMethod": "POST",
            "resolvedPath": "/v1/tts"
          }
        ],
        "name": "api-tts-dev-v1ttsDescription",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "V1ttsDescriptionLambdaVersionWeUJtXcPGtoN7YWsLMPE2TxyO8kzckJe1adJbgZuQrs"
      },
      "v2ttsDescription": {
        "handler": "handler.v2_tts_description",
        "events": [
          {
            "httpApi": {
              "path": "/v2/tts",
              "method": "get"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/v2/tts"
          }
        ],
        "name": "api-tts-dev-v2ttsDescription",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "V2ttsDescriptionLambdaVersionIBICrorIgq4KMuQMGNGl2FMXbTDObHX9beKHPyuMo0"
      }
    },
    "resources": {
      "Resources": {
        "MyS3Bucket": {
          "Type": "AWS::S3::Bucket",
          "Properties": {
            "BucketName": "my-bucket-for-audios"
          }
        },
        "MyS3BucketPolicy": {
          "Type": "AWS::S3::BucketPolicy",
          "Properties": {
            "Bucket": {
              "Ref": "MyS3Bucket"
            },
            "PolicyDocument": {
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": "*",
                  "Action": [
                    "s3:GetObject"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:aws:s3:::${MyS3Bucket}/*"
                    }
                  ]
                }
              ]
            }
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "api-tts",
      "frameworkVersion": "3",
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "C:\\Users\\Aniceto Dinis\\Documents\\Machiene Learning\\equipe6\\actividade_sprint4-6_equipe6\\api-tts\\.serverless\\api-tts.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/api-tts/dev/1711527674933-2024-03-27T08:21:14.933Z",
    "artifact": "api-tts.zip"
  }
}